/*
* SYNTAX EXAMPLE
*
* Version: 0.0.2
*
* NOTE:
* This version is a in-development version and may be changed in the future
*/

/*
* Explanation of symbols used here:
*
* [EXPRESSION] = Optional Expression
*
* NAME = Name of things
* TYPE = Any type
* EXPRESSION = Any expression
* MODULE = Any module
* THING = Something
*
* Everything should be self explanatory
*/


//////////////
// COMMENTS //
//////////////

// Comment

/*
multiline Comment
*/


/////////////
// IMPORTS //
/////////////

// Imports:
import MODULE
// or with custom names
import MODULE as NAME
// or just importing some things
import THING from MODULE [as NAME]


///////////////
// VARIABLES //
///////////////

// Variables:
var NAME = EXPRESSION // dynamic typing, also works as type "dynamic"
// or with types assigned at start
TYPE NAME = EXPRESSION
// as object of an Type
var NAME = new TYPE(ARGUMENTS)

// Constants:
const [TYPE] NAME = EXPRESSION


///////////////////////////
// CLASSES AND FUNCTIONS //
///////////////////////////

// Classes:
class NAME([SUBCLASS]) {
CODE
}

// Functions:
[private] RETURN_TYPE NAME(ARGUMENT_TYPE ARGUMENT_NAME [= DEFAULT_VALUE]) {
CODE
}
// or for dynamic types:
[private] func[tion] NAME(ARGUMENT_TYPE ARGUMENT_NAME [= DEFAULT_VALUE]) {
CODE
}

// Calls to functions from a class:
CLASS_NAME.NAME()

// Calls to functions:
NAME(ARGUMENT)


///////////////////////
// SPECIAL USE CASES //
///////////////////////

// Usage of garbage collection:
import GarbageCollection
use GarbageCollection // This is very likely to change in the future

// Multithreading:
import Multithreading
class NAME(Multithreading){
CODE
}
// Normal classes will still work then


/////////////
// STRINGS //
/////////////

// String formatting, works with any string or variable that's a string:
string NAME = f"Hello {PERSON}!"
// or
string NAME = "Hello {}!".format(PERSON)
// or just simply
string NAME = "Hello " + PERSON + "!"


//////////
// MATH //
//////////

// Get Ï€:
import Math
float Pi = Math.Pi
// 3.141592653589793238462643383279502884197
